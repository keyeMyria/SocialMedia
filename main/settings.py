"""
Django settings for main project.

Generated by 'django-admin startproject' using Django 1.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os,ipack





# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'n9-!ro7_3!(r-wosmexjx(ng@n55v52z896*h3g3d=59lsl(-m'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['.fetcher.com','*']


SOUTH_MIGRATION_MODULES = {
    'captcha': 'captcha.south_migrations',
}

# Application definition




INSTALLED_APPS = [
    'channels',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #my own made app 
    'ipack',
  #  'monitor',
    #third_part_apps
    'crispy_forms',
    'captcha',
    'registration',
    'django_celery_results',
    #'channels_presence',
    #my_Apps
    'scrp',
    'inner',
    'mstf',
    'chatroom',
    'mob',
    'fetcher',
    'friends',
    #'security',
    'gallery',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #My Middlewares
    #'security.Middleware.save_requests',
]

ROOT_URLCONF = 'main.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
    
    
        'libraries':{
            'ipack': 'ipack.tags',

            },
        },
    },
]



WSGI_APPLICATION = 'main.wsgi.application'





SILENCED_SYSTEM_CHECKS = []
# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'main',
        'USER': 'admin',
        'PASSWORD': 'med',
        'HOST': '*',
        'PORT': '5432',
    }
}




"""
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

"""
# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]




#####           Loging system        ########

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    # filters will define when a logger should run
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    # format in which logs will be written
    'formatters': {
        'simple': {
            'format': '[%(asctime)s] %(levelname)s %(message)s',
        'datefmt': '%Y-%m-%d %H:%M:%S'
        },
        'verbose': {
            'format': '[%(asctime)s] %(levelname)s [%(name)s.%(funcName)s:%(lineno)d] %(message)s',
        'datefmt': '%Y-%m-%d %H:%M:%S'
        },
    },
    # handlers define the file to be written, which level to write in that file,
    # which format to use and which filter applies to that logger
    'handlers': {
        'debug_logfile_mobile': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'], # do not run debug logger in production
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR,'logs', 'debug.log'),
            'formatter': 'verbose'
        },
        'error_logfile_mobile': {
            'level': 'ERROR',
            'filters': ['require_debug_false'], # run logger in production
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR,'logs', 'error.log'),
            'formatter': 'verbose'
        },
    },
    # here the handlers for the loggers and the level of each logger is defined
    'loggers': {
        'error_logger': {
            'handlers': ['error_logfile_mobile'],
            'level': 'ERROR'
         },
        'debug_logger': {
            'handlers': ['debug_logfile_mobile'],
            'level': 'DEBUG'
        },
    }
}





ASGI_APPLICATION = 'main.routing.application'
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)],
        },
    },
}







# CELERY STUFF
BROKER_URL = 'redis://localhost:6379'
CELERY_RESULT_BACKEND = 'redis://localhost:6379'
CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Africa/Nairobi'










# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True




EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True

EMAIL_HOST_USER = 'medadamine42@gmail.com'
EMAIL_HOST_PASSWORD = 'Mohamedes1'
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS=(os.path.join(BASE_DIR,"templates","pages"),)
STATIC_ROOT=os.path.join(BASE_DIR,'static','STATIC_ROOT')
MEDIA_URL="/media/"
MEDIA_ROOT=os.path.join(BASE_DIR,'static','media')

CRISPY_TEMPLATE_PACK="bootstrap3"

LOGIN_REDIRECT_URL="/"


ACCOUNT_ACTIVATION_DAYS = 7
REGISTRATION_AUTO_LOOGIN=True
if DEBUG:
    SITE_ID=2
else:
    SITE_ID=1


SECURITY_CHECK = "F:/files_tmp/"


#/bootstrap  packages --> change the name 'bootstrap'
IPACK= os.path.join(STATICFILES_DIRS[0],"codes")


#Fetcher localisation

HOST_FULL = "127.0.0.1:8000"


R_FOLDER = os.path.join("PATTERNS","Result_url")
RF_FOLDER = os.path.join("PATTERNS","final_result")


"""from monitor.myapp import client

R_DEBUG= True

     
if R_DEBUG:
    client.on_start_up()"""